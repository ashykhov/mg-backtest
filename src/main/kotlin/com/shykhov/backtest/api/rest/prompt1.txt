у меня есть бектест сервис
/Users/genius/IdeaProjects/Gaynance/mg-central/services/backtest/src/main/kotlin/com/shykhov/backtest
и мы должны реализовать для него фронтенд.
сам фронтенд лежит в папке /Users/genius/IdeaProjects/Gaynance/mg-central/frontend/mg-frontend
нам нужно - дашборд бектестов (на подобии дашборда фтючерсов, только без поллинга. /backtest
ты можешь работать только в проекте фронтенда
ты не моджешь менять и ломать существующий функционалш - только использовать текущий и добавлять новый

использую текущий код и функционал как референс - используй такие жа таблицйы,
 а для страницы бектеста - такой же юай который делит окна на части с возможностью ресайза.









у меня есть бектест сервис
/Users/genius/IdeaProjects/Gaynance/mg-central/services/backtest/src/main/kotlin/com/shykhov/backtest
и мы должны реализовать для него фронтенд.
сам фронтенд лежит в папке /Users/genius/IdeaProjects/Gaynance/mg-central/frontend/mg-frontend
нам нужно
1. дашборд бектестов (на подобии дашборда фтючерсов, только без поллинга. /backtest
2. страница конкретного бектеста (результаты ббектеста и его данные и конфиг) backtest/{backtest_id}
3. страница запуска бектеста.(открывается при кнопке нбю бектест, или роуту backtest/new

ты можешь работать только в проекте фронтенда
ты не моджешь менять и ломать существующий функционалш - только использовать текущий и добавлять новый

использую текущий код и функционал как референс - используй такие жа таблицйы,
 а для страницы бектеста - такой же юай который делит окна на части с возможностью ресайза.
 так же смотри на текущую структуру и делай похожмим образом и подходом


























смотри. у меня есть BacktestController в сервисе для бектестов,
 и есть фронтенд - в нем есть тоже страница для бектеста. мне нужно чтобы страница использовала мой сервис.
  стратегия - это то что у меня на апи называеится типом.
  для каждой стратегии есть доступные данные которые можно посчитать (tickOutputType) - их тоже можно получить через апи,
   и их нужно выбирать перед тем как запустить бектест.
так же для запуска бектеста нам надо заполнить параметры байз квоукт бай селл  и титп для одной и второй стороны
- тут все просто. мы поступаем так же как для фронтенда - берем их из урл
http://localhost:8080/futures/chart/FUTURES-RATO-USDT-LBANK-FUTURES-RATO-USDT-MEXC это пример урл для фтючерсов
http://localhost:8080/backtest/run/FUTURES-RATO-USDT-LBANK-FUTURES-RATO-USDT-MEXC это пример для бектеста
механика такая - мы перешли по урл (просто сделай кнопку где-то на странице с фьючерсной сделкой)
из урл заполнились параметры
        @Parameter(example = "BTC")
        @RequestParam("buyBase") buyBase: String,
        @Parameter(example = "USDT")
        @RequestParam("buyQuote") buyQuote: String,
        @Parameter(example = "BINANCE")
        @RequestParam("buyExchange") buyExchange: Exchange,
        @Parameter(example = "FUTURES")
        @RequestParam("buyType") buyType: PairType,
        @Parameter(example = "BTC")
        @RequestParam("sellBase") sellBase: String,
        @Parameter(example = "USDT")
        @RequestParam("sellQuote") sellQuote: String,
        @Parameter(example = "MEXC")
        @RequestParam("sellExchange") sellExchange: Exchange,
        @Parameter(example = "FUTURES")
        @RequestParam("sellType") sellType: PairType,
        @Parameter(example = "PRICE_SPREAD")
при загрузке страницы - дургаем ендпоинт чтоб узнать текущие типы.
юзер выбиравет один из типов(стратегий)
мы подгружаем какие данные можно посчитать для этого типа
юзер жмет начать тест
мы дергаем метод инит, получаем в ответ данные бектеста, нам важно его айди.
 редиректим пользователя на страницу с урлом
 http://localhost:8080/backtest/run/{backtest_id_here}/FUTURES-RATO-USDT-LBANK-FUTURES-RATO-USDT-MEXC
 эта страница такой же конструкции как и наша.
  на ней мы должны получить по айди бектеста информацию о нем. информацию отобюразить на странице, а вытащивши
  доступные данные - начать поллить их и отобразить на вернхем графике как загрузятся аналогично тому как это
  сделано на фьючерсах. график должен быть линейным, с такой же легендой и прочим как для фьючерсов.
